#!/usr/bin/env sh

# This runs a test while providing diagnostic output on error.
# $1  The Frobby action to run (e.g. alexdual)
# $2  The name of one or more space-seperated input files
# $3  The reference output file
# $4+ Parameters to frobby
#
# Parameter 2 can contain more than one file if this script has been called
# as e.g. "../thisscript action "file1 file2" reference
#
# If the output produced by Frobby does not match that from the
# reference output according to diff, then this is considered an
# error, diagnostics will be printed and the exit status will 1.
#
# Otherwise a dot '.' is printed and the exit status is 0.
#
# If $4 is _generate, then the output from Frobby is piped into the
# reference output file, overwriting any previous contents. It is
# recommended to manually inspect the output to check if it is
# correct.
#
# If $4 is _summary, then nothing will be printed on success, and a
# short summary line is printed on failure. In this case the exit
# status 0 zero even on failure. The intent of this is to get a
# summary of all failing tests, instead of getting detailed
# information on the first failure.
#
# If $4 is _valgrind, then frobby will be run under valgrind. If
# valgrind reports no errors and no memory leaks, then a 'v' is
# printed to indicate this, and the exist status is 0. If valgrind
# does report an issue, then the valgrind output is displayed and the
# exit status is 1. In either case the actual output of Frobby is
# ignored and is thus not compared to the correct reference output.

# This script is designed to be run from a sub-directory of where it
# resides.

origParams="$*" # used for debug output below
frobby=../../bin/frobby
action="$1"
inputFile="$2"
referenceOutputFile="$3"

# Note that we *must* use echo $inputFile|... instead of ... < $inputFile,
# because the latter does not work if $inputFile ha more than one file
# name in it.

shift
shift
shift

generate=0
if [ "$1" = "_generate" ];
then
  generate=1;
  shift;
fi

summary=0
if [ "$1" = "_summary" ];
then
  summary=1;
  shift;
fi

valg=0
if [ "$1" = "_valgrind" ];
then
  valg=1;
  shift;
fi

params="$*"

printDebugOutput=0
if [ "$printDebugOutput" == 1 ];
then
  echo "------ debug output ------"
  echo "frobby is \"$frobby\""
  echo "origParams is \"$origParams\""
  echo "action is \"$action\""
  echo "inputFile is \"$inputFile\""
  echo "params is \"$params\""
  echo "referenceOutputFile is \"$referenceOutputFile\""
  echo "generate is $generate"
  echo "summary is $summary"
  echo "valg is $valg"
fi


if [ $generate = 1 ]
then
  if [ "$inputFile" == "$referenceOutputFile" ];
  then
    exit 0;
  fi
  echo "***** Generating $referenceOutputFile";
  cat $inputFile|$frobby $action $params > $referenceOutputFile;
  exit 0
fi

if [ $valg = 1 ];
then
  errs=`cat $inputFile|valgrind $frobby $action $params 2>&1 |
        grep -e "ERROR SUMMARY: [^0].* error" -e "--leak-check=full"`;
  if [ "$errs" == "" ];
  then
    echo -n v
    exit 0;
  else
    echo
    echo
    echo "valgrind reports issue on running:"
    echo "  cat $inputFile|valgrind $frobby $action $params"
    echo "Re-running to show full details:"
    echo
    cat $inputFile|valgrind --leak-check=full --show-reachable=yes $frobby $action $params;
    echo
    echo "Re-running to show limited details:"
    cat $inputFile|valgrind --leak-check=full --show-reachable=no $frobby $action $params > /dev/null;
    echo "This is a valgrind report on running:"
    echo "  cat $inputFile|valgrind $frobby $action $params"
    echo "Look further up for a run of valgrind with full details." 
    exit 1;
  fi
fi

cat $inputFile|$frobby $action $params 2> /dev/null | \
  diff - $referenceOutputFile > /dev/null

if [ $? = 0 ];
then
  if [ $summary = 0 ];
  then
    echo -n .
  fi
  exit 0;
fi

if [ $summary = 1 ];
then
  echo "Error on $action: $inputFile -> $referenceOutputFile";
  exit 0;
fi

echo
echo
echo "***** Encountered failure on output $referenceOutputFile. Input was:"
cat $inputFile

echo "***** Reference output:"
cat $referenceOutputFile

echo "***** Standard output from Frobby:"
cat $inputFile|$frobby $action $params 2>/dev/null

echo "***** Error output from Frobby:"
cat $inputFile|$frobby $action $params > /dev/null

echo
echo "***** A test $action: $inputFile -> $referenceOutputFile failed."
echo "  cat $inputFile|$frobby $action $params"

exit 1
