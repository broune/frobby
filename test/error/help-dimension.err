Displaying information on action: dimension

Compute the dimension or codimension of the input ideal. This is the
dimension of the zero set of the ideal. The ideal containing the identity
has an empty zero set, and we define the dimension of this to be -1.
All other ideals have non-negative dimension.

The parameters accepted by dimension are as follows.

 -codim [BOOL]   (default is off)
   Compute the codimension instead of the dimension. The codimension is the
   number of variables in the polynomial ring minus the dimension.

 -iformat STRING   (default is autodetect)
   The format used to read the input. This action supports the formats:
     m2 cocoa4 singular monos newmonos 4ti2 null.
   The format "autodetect" instructs Frobby to guess the format.
   Type 'frobby help io' for more information on input formats.

 -minimal [BOOL]   (default is off)
   Specifies that the input ideal is minimally generated by the given
   generators. Turning this on can improve performance, but if it is not
   true, Frobby may go into an infinite loop or produce incorrect results.

 -split STRING   (default is degree)
   The split selection strategy to use. Options are maxlabel, minlabel,
   varlabel, minimum, median, maximum, mingen, indep and gcd. Optimization
   computations support the specialized strategy degree as well.

 -stats [BOOL]   (default is off)
   Print statistics on what the algorithm did.

 -simplify [BOOL]   (default is on)
   Perform simplification when possible.

 -debug [BOOL]   (default is off)
   Print what the algorithm does at each step.

 -boundSimplify [BOOL]   (default is on)
   Use the bound optimization to solve optimization problems faster by
   simplifying slices through seeking to generate non-improving slices.
   This requires turning elimination of non-improving slices on.

 -bound [BOOL]   (default is on)
   Use the bound optimization to solve optimization problems faster
   by eliminating non-improving slices.

 -canon [BOOL]   (default is off)
   Sort the output, including the variables, to get a canonical
   representation. This requires storing the entire output in memory, which
   can increase run time modestly and increase memory consumption greatly.

 -time [BOOL]   (default is off)
   Display and time each subcomputation.
