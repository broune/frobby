loadPackage "SimplicialComplexes"

eul = I -> (
  R := ring I;
  if not isSquareFree I then (
    print "not square free!";
    exit 1;
  );
  if I == monomialIdeal(1_R) then
    return (if gens R == {} then -1 else 0);

  if I == monomialIdeal(0_R) then
    return 0;

  h := fVector simplicialComplex dual I;

  eulerC := 0;
  for i in keys h do
    eulerC = eulerC + h#i * (-1)^i;
  return eulerC;
);

stderr << (eul I) << "\n";
